await nft.getBaseGenes(2)
await nft.getBaseGenes(1)
await nft.totalSupply()
nft.getSeed(ethers.BigNumber.from("1"))
nft.getSeed(1)
tokens
let tokens = await nft.tokensOf(addr1.address)
await nft.connect(addr1).publicMint(2, options);
let options = {value: (await nft.MINTING_FEE()).mul(2)};
await nft.setStateToPublicMint();
[owner, addr1, addr2, addr3] = await ethers.getSigners();    
 await nft.updateGene(gene.address);
await gene.deployed();
gene = await GeneContract.deploy(nft.address);
await nft.deployed();
 nft = await NTDaoNftContract.deploy(baseImgUrl);
let baseImgUrl = "https://ipfs-gateway.atomrigs.io/ntdao/";
nft = await NTDaoNftContract.deploy(baseImgUrl);
GeneContract = await ethers.getContractFactory("NTDaoNft");
 NTDaoNftContract = await ethers.getContractFactory("NTDaoNft");
await nft.deployed();
nft = await NTDaoNftContract.deploy(baseImgUrl);
NTDaoNftContract = await ethers.getContractFactory("NTDaoNft");
nft = await NFTContract.deploy(baseImgUrl);
let baseImgUrl = "https://ipfs-gateway.atomrigs.io/ntdao/";
nft = await NFTContract.deploy(baseImgUrl);
NFTContract = await ethers.getContractFactory("NTDaoGene");
GeneContract = await ethers.getContractFactory("NTDaoNft");